{"ast":null,"code":"// src/middleware/progress/browser-progress.js\nvar browser_progress_default = function browser_progress_default() {\n  return {\n    onRequest: function onRequest(evt) {\n      if (evt.adapter !== \"xhr\") {\n        return;\n      }\n      var xhr = evt.request;\n      var context = evt.context;\n      if (\"upload\" in xhr && \"onprogress\" in xhr.upload) {\n        xhr.upload.onprogress = handleProgress(\"upload\");\n      }\n      if (\"onprogress\" in xhr) {\n        xhr.onprogress = handleProgress(\"download\");\n      }\n      function handleProgress(stage) {\n        return function (event) {\n          var percent = event.lengthComputable ? event.loaded / event.total * 100 : -1;\n          context.channels.progress.publish({\n            stage: stage,\n            percent: percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable\n          });\n        };\n      }\n    }\n  };\n};\nexport { browser_progress_default };","map":{"version":3,"mappings":";AAAA,IAAOA,2BAAQ,SAARA;EAAA,OAAe;IACpBC,WAAW,wBAAO;MAChB,IAAIC,IAAIC,YAAY,OAAO;QACzB;MACF;MAEA,IAAMC,MAAMF,IAAIG;MAChB,IAAMC,UAAUJ,IAAII;MAEpB,IAAI,YAAYF,OAAO,gBAAgBA,IAAIG,QAAQ;QACjDH,IAAIG,OAAOC,aAAaC,eAAe,QAAQ;MACjD;MAEA,IAAI,gBAAgBL,KAAK;QACvBA,IAAII,aAAaC,eAAe,UAAU;MAC5C;MAEA,SAASA,eAAeC,OAAO;QAC7B,OAAO,iBAAS;UACd,IAAMC,UAAUC,MAAMC,mBAAoBD,MAAME,SAASF,MAAMG,QAAS,MAAM;UAC9ET,QAAQU,SAASC,SAASC,QAAQ;YAChCR;YACAC;YACAI,OAAOH,MAAMG;YACbD,QAAQF,MAAME;YACdD,kBAAkBD,MAAMC;UAC1B,CAAC;QACH;MACF;IACF;EACF;AAAA","names":["browser_progress_default","onRequest","evt","adapter","xhr","request","context","upload","onprogress","handleProgress","stage","percent","event","lengthComputable","loaded","total","channels","progress","publish"],"sources":["C:\\Users\\elygh\\Desktop\\MessagingApp_FullStack\\MessagingApp\\node_modules\\@sanity\\client\\node_modules\\get-it\\src\\middleware\\progress\\browser-progress.js"],"sourcesContent":["export default () => ({\n  onRequest: evt => {\n    if (evt.adapter !== 'xhr') {\n      return\n    }\n\n    const xhr = evt.request\n    const context = evt.context\n\n    if ('upload' in xhr && 'onprogress' in xhr.upload) {\n      xhr.upload.onprogress = handleProgress('upload')\n    }\n\n    if ('onprogress' in xhr) {\n      xhr.onprogress = handleProgress('download')\n    }\n\n    function handleProgress(stage) {\n      return event => {\n        const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n        context.channels.progress.publish({\n          stage,\n          percent,\n          total: event.total,\n          loaded: event.loaded,\n          lengthComputable: event.lengthComputable\n        })\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}