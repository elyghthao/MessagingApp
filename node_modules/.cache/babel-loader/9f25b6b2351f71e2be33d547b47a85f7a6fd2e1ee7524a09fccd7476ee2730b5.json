{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elygh\\\\Desktop\\\\MessagingApp_FullStack\\\\messaging_app\\\\src\\\\Components\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { client, urlFor } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [message, setMessage] = useState([]);\n  const [reload, setReload] = useState(0);\n  useEffect(() => {\n    //called once whenthe site first loads\n    const query = '*[_type == \"message\"]';\n    client.fetch(query).then(data => {\n      setMessage(data);\n    });\n  }, []);\n  const query = '*[_type == \"message\" && authorId != $ownerId]';\n  const params = {\n    ownerId: 'myUserId'\n  };\n  const subscription = client.listen(query, params).subscribe(update => {\n    const comment = update.result;\n    setReload(p => p + 1);\n    console.log(\"Reload\");\n    console.log(comment);\n  });\n  message.sort(function (a, b) {\n    var keyA = new Date(a._createdAt),\n      keyB = new Date(b._createdAt);\n    // Compare the 2 dates\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n    return 0;\n  });\n\n  // message.sort();\n  console.log(message);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\\r bg-stone-200\\r h-screen\\r w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-stone-200 p-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-5 px-10 rounded-1/8 bg-stone-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\\r bg-green-400\\r rounded-full\\r flex \\r justify-center items-center\\r \",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-medium\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center\",\n          children: msg.img && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: urlFor(msg.img),\n            alt: msg.timestamp,\n            className: \"\\r object-cover h-1/4 w-1/4 p-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"C+qGeSaYSk2pAyWlQ4Fl4GZYfAM=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","motion","client","urlFor","Main","message","setMessage","reload","setReload","query","fetch","then","data","params","ownerId","subscription","listen","subscribe","update","comment","result","p","console","log","sort","a","b","keyA","Date","_createdAt","keyB","map","msg","index","content","img","timestamp"],"sources":["C:/Users/elygh/Desktop/MessagingApp_FullStack/messaging_app/src/Components/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport { client, urlFor } from '../client';\r\n\r\n\r\nfunction Main() {\r\n  const [message, setMessage] = useState([]);\r\n  const [reload, setReload] = useState(0);\r\n\r\n  useEffect(() => {//called once whenthe site first loads\r\n    const query = '*[_type == \"message\"]'\r\n    client.fetch(query)\r\n      .then((data) => { setMessage(data); })\r\n  }, [])\r\n\r\n\r\n  const query = '*[_type == \"message\" && authorId != $ownerId]'\r\n  const params = { ownerId: 'myUserId' }\r\n  const subscription = client.listen(query, params)\r\n    .subscribe(update => {\r\n      const comment = update.result\r\n      setReload(p => p+1);\r\n      console.log(\"Reload\");\r\n      console.log(comment);\r\n    })\r\n\r\n\r\n    \r\n\r\n  message.sort(function(a, b) {\r\n    var keyA = new Date(a._createdAt),\r\n      keyB = new Date(b._createdAt);\r\n    // Compare the 2 dates\r\n    if (keyA < keyB) return -1;\r\n    if (keyA > keyB) return 1;\r\n    return 0;\r\n  });\r\n\r\n\r\n  // message.sort();\r\n  console.log(message);\r\n  return (\r\n    <div className=\"\r\n    bg-stone-200\r\n      h-screen\r\n      w-screen\">\r\n      {/* <h1 className=''>Main</h1> */}\r\n      <div className='bg-stone-200 p-5'></div>\r\n\r\n\r\n      <div>\r\n        {message.map((msg, index) => (\r\n          <div className='pt-5 px-10 rounded-1/8 bg-stone-200' key={index}>\r\n            <div className='\r\n              bg-green-400\r\n              rounded-full\r\n              flex \r\n              justify-center items-center\r\n              '>\r\n              <h1 className='text-2xl font-medium'>{msg.content}</h1>\r\n            </div>\r\n\r\n            <div className='flex justify-center items-center'>\r\n               {msg.img && \r\n               <img src={urlFor(msg.img)} alt={msg.timestamp} className='\r\n               object-cover h-1/4 w-1/4 p-1' />\r\n               }\r\n              \r\n            </div>\r\n\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,EAAEC,MAAM,QAAQ,WAAW;AAAC;AAG3C,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IAAC;IACf,MAAMS,KAAK,GAAG,uBAAuB;IACrCP,MAAM,CAACQ,KAAK,CAACD,KAAK,CAAC,CAChBE,IAAI,CAAEC,IAAI,IAAK;MAAEN,UAAU,CAACM,IAAI,CAAC;IAAE,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMH,KAAK,GAAG,+CAA+C;EAC7D,MAAMI,MAAM,GAAG;IAAEC,OAAO,EAAE;EAAW,CAAC;EACtC,MAAMC,YAAY,GAAGb,MAAM,CAACc,MAAM,CAACP,KAAK,EAAEI,MAAM,CAAC,CAC9CI,SAAS,CAACC,MAAM,IAAI;IACnB,MAAMC,OAAO,GAAGD,MAAM,CAACE,MAAM;IAC7BZ,SAAS,CAACa,CAAC,IAAIA,CAAC,GAAC,CAAC,CAAC;IACnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACtB,CAAC,CAAC;EAKJd,OAAO,CAACmB,IAAI,CAAC,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC1B,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,UAAU,CAAC;MAC/BC,IAAI,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC;IAC/B;IACA,IAAIF,IAAI,GAAGG,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1B,IAAIH,IAAI,GAAGG,IAAI,EAAE,OAAO,CAAC;IACzB,OAAO,CAAC;EACV,CAAC,CAAC;;EAGF;EACAR,OAAO,CAACC,GAAG,CAAClB,OAAO,CAAC;EACpB,oBACE;IAAK,SAAS,EAAC,uCAGJ;IAAA,wBAET;MAAK,SAAS,EAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAO,eAGxC;MAAA,UACGA,OAAO,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtB;QAAK,SAAS,EAAC,qCAAqC;QAAA,wBAClD;UAAK,SAAS,EAAC,yEAKZ;UAAA,uBACD;YAAI,SAAS,EAAC,sBAAsB;YAAA,UAAED,GAAG,CAACE;UAAO;YAAA;YAAA;YAAA;UAAA;QAAM;UAAA;UAAA;UAAA;QAAA,QACnD,eAEN;UAAK,SAAS,EAAC,kCAAkC;UAAA,UAC7CF,GAAG,CAACG,GAAG,iBACR;YAAK,GAAG,EAAEhC,MAAM,CAAC6B,GAAG,CAACG,GAAG,CAAE;YAAC,GAAG,EAAEH,GAAG,CAACI,SAAU;YAAC,SAAS,EAAC;UAC5B;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAG7B;MAAA,GAhBkDH,KAAK;QAAA;QAAA;QAAA;MAAA,QAmBhE;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QAGF;AAEV;AAAC,GAxEQ7B,IAAI;AAAA,KAAJA,IAAI;AA0Eb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}